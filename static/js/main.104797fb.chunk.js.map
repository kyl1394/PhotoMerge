{"version":3,"sources":["walls/wall-1.jpg","walls/wall-2.jpg","walls/wall-3.jpg","walls/wall-4.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","state","selectedFile","isResultReady","selectedWallIndex","fileSelectedHandler","event","reader","FileReader","selectedImage","document","querySelector","target","files","onload","e","src","result","setState","readAsDataURL","fileUploadHandler","wallPreview","canvas","mergedResult","ctx","getContext","imageObj1","Image","imageObj2","width","height","globalAlpha","drawImage","createCombinedImage","img","toDataURL","img1","img2","setSelectedWall","dataset","imageSelector","className","rel","href","type","onChange","this","style","flexBasis","data-image-selector","maxHeight","wall1","onClick","wall2","wall3","wall4","disabled","textAlign","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.104797fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wall-1.5192d193.jpg\";","export default __webpack_public_path__ + \"static/media/wall-2.3f34c13b.jpg\";","export default __webpack_public_path__ + \"static/media/wall-3.dc6be7cc.jpg\";","export default __webpack_public_path__ + \"static/media/wall-4.7e38099f.jpg\";","import './App.css';\r\nimport { Component } from 'react';\r\nimport wall1 from './walls/wall-1.jpg';\r\nimport wall2 from './walls/wall-2.jpg';\r\nimport wall3 from './walls/wall-3.jpg';\r\nimport wall4 from './walls/wall-4.jpg';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    selectedFile: false,\r\n    isResultReady: false,\r\n    selectedWallIndex: 0\r\n  }\r\n\r\n  fileSelectedHandler = event => {\r\n    var reader = new FileReader(),\r\n    selectedImage = document.querySelector(\"[data-image-selector='selected-image']\");\r\n\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.onload = (e) => {\r\n        selectedImage.src = e.target.result;\r\n        this.setState({\r\n          selectedFile: true\r\n        });\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  fileUploadHandler = () => {\r\n    var wallPreview = document.querySelector(\"[data-image-selector='\" + this.state.selectedWallIndex + \"']\"),\r\n    selectedImage = document.querySelector(\"[data-image-selector='selected-image']\"),\r\n    canvas = document.querySelector(\"[data-image-selector='canvas']\"),\r\n    mergedResult = document.querySelector(\"[data-image-selector='merged-result']\"),\r\n    ctx = canvas.getContext('2d'),\r\n    imageObj1 = new Image(),\r\n    imageObj2 = new Image();\r\n\r\n    this.setState({\r\n      isResultReady: true\r\n    });\r\n\r\n    imageObj1.src = wallPreview.src;\r\n    imageObj1.onload = () => {\r\n      canvas.width = imageObj1.width;\r\n      canvas.height = imageObj1.height;\r\n      ctx.globalAlpha = 1;\r\n      ctx.drawImage(imageObj1, 0, 0);\r\n      imageObj2.src = selectedImage.src;\r\n      imageObj2.onload = () => {\r\n        this.createCombinedImage(ctx, imageObj1, imageObj2);\r\n\r\n        var img = canvas.toDataURL('image/jpeg');\r\n        mergedResult.src = img;\r\n      }\r\n    };\r\n  }\r\n\r\n  createCombinedImage = (ctx, img1, img2) => {\r\n    switch (this.state.selectedWallIndex) {\r\n      case \"1\":\r\n        ctx.drawImage(img2, 1230, 442, 954, 1348);\r\n        break;\r\n      case \"2\":\r\n        if (img2.width > img2.height) {\r\n          ctx.drawImage(img2, (img1.width/2)-(1100/2), 550, 1100, (img2.height/img2.width)*1100);\r\n        } else {\r\n          ctx.drawImage(img2, (img1.width/2)-(850/2), 350, 850, (img2.height/img2.width)*850);\r\n        }\r\n        break;\r\n      case \"3\":\r\n        ctx.drawImage(img2, 1789, 499, 1143, 759);\r\n        break;\r\n      case \"4\":\r\n        ctx.drawImage(img2, 988, 266, 920, 626);\r\n        break;\r\n    }\r\n  }\r\n\r\n  setSelectedWall = (e) => {\r\n    this.setState({\r\n      selectedWallIndex: e.target.dataset.imageSelector\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n      <header>\r\n        <title>Create Next App</title>\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </header>\r\n  \r\n      <main>\r\n        <h1 className=\"title\">\r\n          Welcome to __________!\r\n        </h1>\r\n  \r\n        <p className=\"description\">\r\n          Get started by uploading a photo below, selecting a room, and then clicking combine\r\n        </p>\r\n  \r\n        <div className=\"grid\">\r\n          <input className=\"uploadButton\" type=\"file\" onChange={this.fileSelectedHandler} style={{flexBasis: \"100%\"}} />\r\n          <img data-image-selector=\"selected-image\" className={this.state.selectedFile ? \"\" : \"hidden\"} style={{maxHeight: \"30rem\"}} src=\"/baldy.jpg\" />\r\n          \r\n          <div className=\"wall-selector\">\r\n            <img data-image-selector=\"1\" src={wall1} style={{height: \"100%\"}} onClick={this.setSelectedWall} className={this.state.selectedWallIndex == 1 ? \"image selected\" : \"image\"} />\r\n            <img data-image-selector=\"2\" src={wall2} style={{height: \"100%\"}} onClick={this.setSelectedWall} className={this.state.selectedWallIndex == 2 ? \"image selected\" : \"image\"} />\r\n            <img data-image-selector=\"3\" src={wall3} style={{height: \"100%\"}} onClick={this.setSelectedWall} className={this.state.selectedWallIndex == 3 ? \"image selected\" : \"image\"} />\r\n            <img data-image-selector=\"4\" src={wall4} style={{height: \"100%\"}} onClick={this.setSelectedWall} className={this.state.selectedWallIndex == 4 ? \"image selected\" : \"image\"} />\r\n          </div>\r\n        </div>\r\n        \r\n        <button className=\"card combineButton\" onClick={this.fileUploadHandler} disabled={this.state.selectedFile == false || this.state.selectedWallIndex == 0}>Combine</button>\r\n        <br/>\r\n        <br/>\r\n        <br />\r\n        <img data-image-selector=\"merged-result\" className={this.state.isResultReady ? \"\" : \"hidden\"} style={{maxHeight: \"500px\"}} />\r\n        <canvas data-image-selector=\"canvas\" className=\"hidden\"></canvas>\r\n      </main>\r\n  \r\n      <footer>\r\n        <p style={{textAlign: \"center\"}}>Shoot me a message with any feature requests!<br />\r\n          Â© Kyle Rohlfing - 2020</p>\r\n      </footer>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}