{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","selectedFile","isResultReady","selectedWallIndex","fileSelectedHandler","event","fileUploadHandler","createCombinedImage","ctx","img1","img2","setSelectedWall","e","className","rel","href","type","onChange","this","style","flexBasis","data-image-selector","maxHeight","src","onClick","disabled","textAlign","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QA2HeA,E,4MAvHbC,MAAQ,CACNC,cAAc,EACdC,eAAe,EACfC,kBAAmB,G,EAGrBC,oBAAsB,SAAAC,K,EAetBC,kBAAoB,a,EA6BpBC,oBAAsB,SAACC,EAAKC,EAAMC,K,EAelCC,gBAAkB,SAACC,K,4CAMnB,WACE,OACE,sBAAKC,UAAU,YAAf,UACA,mCACE,oDACA,sBAAMC,IAAI,OAAOC,KAAK,oBAGxB,iCACE,oBAAIF,UAAU,QAAd,oCAIA,mBAAGA,UAAU,cAAb,iGAIA,sBAAKA,UAAU,OAAf,UACE,uBAAOG,KAAK,OAAOC,SAAUC,KAAKd,oBAAqBe,MAAO,CAACC,UAAW,UAC1E,qBAAKC,sBAAoB,iBAAiBR,UAAWK,KAAKlB,MAAMC,aAAe,GAAK,SAAUkB,MAAO,CAACG,UAAW,SAAUC,IAAI,eAE/H,qBAAKV,UAAU,qBAUjB,wBAAQA,UAAU,OAAOW,QAASN,KAAKZ,kBAAmBmB,SAAqC,GAA3BP,KAAKlB,MAAMC,cAAyD,GAAhCiB,KAAKlB,MAAMG,kBAAnH,qBACA,uBACA,uBACA,uBACA,qBAAKkB,sBAAoB,gBAAgBR,UAAWK,KAAKlB,MAAME,cAAgB,GAAK,SAAUiB,MAAO,CAACG,UAAW,WACjH,wBAAQD,sBAAoB,SAASR,UAAU,cAGjD,iCACE,oBAAGM,MAAO,CAACO,UAAW,UAAtB,0DAA8E,uBAA9E,wC,GAhHUC,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.494c067d.chunk.js","sourcesContent":["import './App.css';\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    selectedFile: false,\n    isResultReady: false,\n    selectedWallIndex: 0\n  }\n\n  fileSelectedHandler = event => {\n    // var reader = new FileReader(),\n    // selectedImage = document.querySelector(\"[data-image-selector='selected-image']\");\n\n    // if (event.target.files && event.target.files[0]) {\n    //   reader.onload = (e) => {\n    //     selectedImage.src = e.target.result;\n    //     this.setState({\n    //       selectedFile: true\n    //     });\n    //   };\n    //   reader.readAsDataURL(event.target.files[0]);\n    // }\n  }\n\n  fileUploadHandler = () => {\n    // var wallPreview = document.querySelector(\"[data-image-selector='\" + this.state.selectedWallIndex + \"']\"),\n    // selectedImage = document.querySelector(\"[data-image-selector='selected-image']\"),\n    // canvas = document.querySelector(\"[data-image-selector='canvas']\"),\n    // mergedResult = document.querySelector(\"[data-image-selector='merged-result']\"),\n    // ctx = canvas.getContext('2d'),\n    // imageObj1 = new Image(),\n    // imageObj2 = new Image();\n\n    // this.setState({\n    //   isResultReady: true\n    // });\n\n    // imageObj1.src = wallPreview.src;\n    // imageObj1.onload = () => {\n    //   canvas.width = imageObj1.width;\n    //   canvas.height = imageObj1.height;\n    //   ctx.globalAlpha = 1;\n    //   ctx.drawImage(imageObj1, 0, 0);\n    //   imageObj2.src = selectedImage.src;\n    //   imageObj2.onload = () => {\n    //     this.createCombinedImage(ctx, imageObj1, imageObj2);\n\n    //     var img = canvas.toDataURL('image/jpeg');\n    //     mergedResult.src = img;\n    //   }\n    // };\n  }\n\n  createCombinedImage = (ctx, img1, img2) => {\n    // switch (this.state.selectedWallIndex) {\n    //   case \"1\":\n    //     ctx.drawImage(img2, 1230, 442, 954, 1348);\n    //     break;\n    //   case \"2\":\n    //     if (img2.width > img2.height) {\n    //       ctx.drawImage(img2, (img1.width/2)-(1500/2), 550, 1500, (img2.height/img2.width)*1500);\n    //     } else {\n    //       ctx.drawImage(img2, (img1.width/2)-(850/2), 350, 850, (img2.height/img2.width)*850);\n    //     }\n    //     break;\n    // }\n  }\n\n  setSelectedWall = (e) => {\n    // this.setState({\n    //   selectedWallIndex: e.target.dataset.imageSelector\n    // });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      <header>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </header>\n  \n      <main>\n        <h1 className=\"title\">\n          Welcome to __________!\n        </h1>\n  \n        <p className=\"description\">\n          Get started by uploading a photo below, selecting a room, and then clicking combine\n        </p>\n  \n        <div className=\"grid\">\n          <input type=\"file\" onChange={this.fileSelectedHandler} style={{flexBasis: \"100%\"}} />\n          <img data-image-selector=\"selected-image\" className={this.state.selectedFile ? \"\" : \"hidden\"} style={{maxHeight: \"30rem\"}} src=\"/baldy.jpg\" />\n          \n          <div className=\"wall-selector\">\n            {/* <img data-image-selector=\"1\" src=\"/walls/wall-1.jpg\" style={{height: \"100%\"}} onClick={this.setSelectedWall} className={this.state.selectedWallIndex == 1 ? \"image selected\" : \"image\"} />\n            <img data-image-selector=\"2\" src=\"/walls/wall-2.jpg\" style={{height: \"100%\"}} onClick={this.setSelectedWall} className={this.state.selectedWallIndex == 2 ? \"image selected\" : \"image\"} /> */}\n          </div>\n          {/* <a href=\"https://nextjs.org/docs\" className=\"card\">\n            <h3>Documentation &rarr;</h3>\n            <p>Find in-depth information about Next.js features and API.</p>\n          </a> */}\n        </div>\n        \n        <button className=\"card\" onClick={this.fileUploadHandler} disabled={this.state.selectedFile == false || this.state.selectedWallIndex == 0}>Combine</button>\n        <br/>\n        <br/>\n        <br />\n        <img data-image-selector=\"merged-result\" className={this.state.isResultReady ? \"\" : \"hidden\"} style={{maxHeight: \"500px\"}} />\n        <canvas data-image-selector=\"canvas\" className=\"hidden\"></canvas>\n      </main>\n  \n      <footer>\n        <p style={{textAlign: \"center\"}}>Shoot me a message with any feature requests!<br />\n          Â© Kyle Rohlfing - 2020</p>\n      </footer>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}